/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package homework03

import homework03.client.RedditClient
import homework03.csv.CsvWriter
import homework03.csv.csvSerialize
import homework03.json.comment.Comment
import homework03.json.comment.CommentsSnapshot
import homework03.json.topic.TopicSnapshot
import kotlinx.coroutines.Deferred
import kotlinx.coroutines.async
import kotlinx.coroutines.awaitAll
import kotlinx.coroutines.runBlocking

fun main(args: Array<String>) = runBlocking{
    if (args.size % 2 == 0 || args.size < 3) {
        throw IllegalArgumentException("Expected path and pairs <topic, comment>")
    }
    val topicsSnapshots = arrayListOf<Deferred<TopicSnapshot>>()
    val commentsSnapshots = arrayListOf<Deferred<CommentsSnapshot>>()
    val pathToSave = args[0]
    for (i in 1 until args.size step 2) {
        topicsSnapshots.add(async { RedditClient.getTopic(args[i]) })
        commentsSnapshots.add(async { RedditClient.getComments(args[i], args[i + 1]) })
    }
    val topicsCsv = csvSerialize(topicsSnapshots.awaitAll(), TopicSnapshot::class)
    val commentsCsv = csvSerialize(commentsSnapshots.awaitAll().map { it.linearize() }.flatten(), Comment::class)
    CsvWriter.write(topicsCsv, pathToSave, "--subjects.csv")
    CsvWriter.write(commentsCsv, pathToSave, "--comments.csv")
}
